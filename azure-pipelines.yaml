trigger:
- uat
- main
- develop

resources:
- repo: self

variables:
  project: websites
  region: australiaeast
  app_name: 'connectified-au'
  imageRepository: '$(app_name)'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  #tags
  imageTag: '$(Build.BuildNumber)'
  vmImageName: 'ubuntu-latest'
  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    environment: prod
  ${{ if eq(variables['Build.SourceBranchName'], 'uat') }}:
    environment: uat
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    environment: develop
  azureSubscription: "scarm-${{ variables.app_name }}-${{ variables.environment }}"
  resourceGroup: "rg-ca-$(app_name)-$(environment)-$(region)"
  dockerRegistryServiceConnection: "scacr-$(project)-$(environment)"
  containerRegistry: "acr$(project)prod.azurecr.io"
  containerAppName: "$(app_name)-$(environment)"

pool:
  vmImage: $(vmImageName)

stages:
- stage: Build
  displayName: Build and push docker images to $(containerRegistry)
  jobs:
  - job: DockerBuildImage
    displayName: Build and push docker images
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        containerRegistry: $(dockerRegistryServiceConnection)
        Dockerfile: $(dockerfilePath)
        tags: '$(imageTag)'

- ${{ if ne(variables['Build.SourceBranchName'],'main') }}:
  - stage: Deploy
    displayName: Deploy Container App
    jobs:
    - deployment: DeployContainerApp
      displayName: Deploy Container App
      # check if the environment code is prd
      ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
        environment: prod
      ${{ if eq(variables['Build.SourceBranchName'], 'uat') }}:
        environment: uat
      ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
        environment: dev
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureContainerApps@1
              inputs:
                azureSubscription: $(azureSubscription)
                imageToDeploy : $(containerRegistry)/$(imageRepository):$(imageTag)
                containerAppName: '$(containerAppName)'
                resourceGroup: $(resourceGroup)